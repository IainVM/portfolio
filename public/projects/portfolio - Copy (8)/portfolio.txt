Starting again
23:34 - 04/07/2017
So I once again (after many attempts) decided to tackle the task of creating myself a portfolio website, so that I could post about personal projects I've been working on, along with have a documentation of issues I've run into and a note of how I solved them. This time I've decided to try my hand at Node.js and the various packages that are offered. From the advice of a friend I have decided to try using the following tools:

- Nginx
- Node.js
- npm
- Express
- pug
- gulp
- SCSS
- Materialize

-------------------
The Breakdown
00:14 - 05/07/2017
So the idea of the current workstack is as goes:
Nginx: This will handle the requests coming into the server and act as a reverse proxy, sending the requests that belong to my portfolio to the Node app. This is used for the benefit of Nginx already being on the server handling different sites and projects, Nginx logs will be handy, also it means the program serving the requests won't be down if the site is updated or edited. 

Express: This will allow me to have more control of how my portfolio acts from within the app, rather than constructing complex virtual host files in nginx

Pug: The templating tool will help reduce the amount of time spent remaking certain parts of the site, like the navigation bar. It will also reduce the chances of errors since I won't be retyping code, rather reusing the same code making managability a lot more copable as well.

SCSS: CSS has always been a horribly messy file is my opinion and to compress many of the lines by using a hierarchal style seems more logical due to the inheretance of many CSS attributes. Simply makes CSS more managable and readable.

Materialize: This is a CSS library for helping make the website look like Material Design, this is a design choice and not really something that helps in any way. 

Gulp: This is a build tool that will automate small tasks I have to do during development. 

---------------------
The First Task